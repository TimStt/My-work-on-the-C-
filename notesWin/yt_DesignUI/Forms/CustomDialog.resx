<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEQAAAF0AAACeAAAAzQAA
        AOwAAAD7AAAA+wAAAOwAAADNAAAAngAAAF0AAAARAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJwAAAKEAAAD3AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAPcAAAChAAAAJwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAAI4AAAD7AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD7AAAAjwAA
        AAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACYAAADVAAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA1gAAACcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0AAAA7AAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA7AAAADQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJgAA
        AOwAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAKoAAABVAAAAVQAAAFUAAABVAAAApwAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA7AAAACYAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAoAAADVAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAVQAAAAAAAAAAAAAAAAAA
        AAAAAABUAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA1gAAAAoAAAAAAAAAAAAA
        AAAAAAAAAAAAjgAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAABVAAAAAAAA
        AAAAAAAAAAAAAAAAAFQAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAjwAA
        AAAAAAAAAAAAAAAAACcAAAD7AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AFUAAAAAAAAAAAAAAAAAAAAAAAAAVAAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD7AAAAJwAAAAAAAAAAAAAAoQAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAAVQAAAAAAAAAAAAAAAAAAAAAAAABUAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAChAAAAAAAAABEAAAD3AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAACrAAAAVQAAAFUAAABVAAAAVQAAAKcAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAPcAAAARAAAAXQAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAF0AAACeAAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA3QAAAKkAAACpAAAAqQAAAKkAAADfAAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAngAAAM0AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAABZAAAAAAAAAAAAAAAAAAAAAAAA
        AF4AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADNAAAA7AAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAFEAAAAAAAAAAAAA
        AAAAAAAAAAAAVQAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AOwAAAD7AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAASgAA
        AAAAAAAAAAAAAAAAAAAAAABOAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA+wAAAPsAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAABDAAAAAAAAAAAAAAAAAAAAAAAAAEYAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD7AAAA7AAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAADwAAAAAAAAAAAAAAAAAAAAAAAAAPwAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAOwAAADNAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAANQAAAAAAAAAAAAAAAAAAAAAAAAA4AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAzQAAAJ4AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAAuAAAAAAAAAAAAAAAAAAAAAAAAADAAAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAACeAAAAXQAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAACcAAAAAAAAAAAAAAAAAAAAAAAAAKQAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAF0AAAARAAAA9wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAIAAAAAAAAAAAAAAAAAAA
        AAAAAAAhAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD3AAAAEQAA
        AAAAAAChAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAAZAAAAAAAA
        AAAAAAAAAAAAAAAAABoAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AKEAAAAAAAAAAAAAACcAAAD7AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        ABIAAAAAAAAAAAAAAAAAAAAAAAAAEwAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD7AAAAKAAAAAAAAAAAAAAAAAAAAI4AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAACwAAAAAAAAAAAAAAAAAAAAAAAAALAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAI8AAAAAAAAAAAAAAAAAAAAAAAAACgAAANUAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAADWAAAACgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJgAAAOwAAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAGwAAABVAAAAVQAAAFUAAABVAAAAbAAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA7AAAACYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANAAA
        AOwAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAOwAAAA0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAJgAAANUAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADWAAAAJgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAAI4AAAD7AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD7AAAAjgAAAAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACcAAAChAAAA9wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD3AAAAoQAAACcAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARAAAAXQAA
        AJ4AAADNAAAA7AAAAPsAAAD7AAAA7AAAAM0AAACeAAAAXQAAABEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/8AD//8AAP/8AAA/+AAAH/AAAA/gAAAHwAPAA8ADwAOAA8ABgAPAAQAA
        AAAAAAAAAAAAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAIADwAGAA8ABwAPAA8AD
        wAPgAAAH8AAAD/gAAB/8AAA//wAA///AA/8=
</value>
  </data>
</root>